[@@@doc "Boolean type."]

open Rudiments0

type t: t = bool

include IdentifiableIntf.S with type t: t := t
include StringableIntf.S with type t: t := t

of_uns: uns -> t
  [@@doc "Initialize from unsigned integer."]

to_uns: t -> uns
  [@@doc "Convert to unsigned integer."]

not: t -> t
  [@@doc "`not t` returns the logical negation of `t`."]

fmt >e: ?pad:codepoint -> ?just:Fmt.just -> ?width:uns -> t -> Fmt.Formatter e >e-> Fmt.Formatter e
  [@@doc "`fmt ~pad ~just ~width s formatter` calls `formatter.fmt` on the result of `to_string ~pad
  ~just ~width s`."]
