C grammar

Tokens
    token EPSILON "ε"
        First: {"ε"}
        Follow: {}
    token PSEUDO_END "⊥"
        First: {"⊥"}
        Follow: {"ε"}
    token EQUAL
        First: {EQUAL}
        Follow: {STAR, ID}
    token STAR
        First: {STAR}
        Follow: {STAR, ID}
    token ID
        First: {ID}
        Follow: {EQUAL, EOI}
    token EOI
        First: {EOI}
        Follow: {"⊥"}
Non-terminals
    start S
        First: {STAR, ID}
        Follow: {"⊥"}
        Productions
            S ::= L EQUAL R EOI
            S ::= R EOI
    start S'
        First: {STAR, ID}
        Follow: {"ε"}
        Productions
            S' ::= S "⊥"
    nonterm L
        First: {STAR, ID}
        Follow: {EQUAL, EOI}
        Productions
            L ::= STAR R
            L ::= ID
    nonterm R
        First: {STAR, ID}
        Follow: {EQUAL, EOI}
        Productions
            R ::= L
PGM(1) States
    State 0 [0.0]
        Kernel
            [S' ::= · S "⊥", {"ε"}]
        Added
            [S ::= · L EQUAL R EOI, {"⊥"}]
            [S ::= · R EOI, {"⊥"}]
            [L ::= · STAR R, {EQUAL, EOI}]
            [L ::= · ID, {EQUAL, EOI}]
            [R ::= · L, {EOI}]
        Actions
            STAR : ShiftPrefix 1
            ID : ShiftPrefix 2
        Gotos
            S : 3
            L : 4
            R : 5
    State 1 [1.0]
        Kernel
            [L ::= STAR · R, {EQUAL, EOI}]
        Added
            [L ::= · STAR R, {EQUAL, EOI}]
            [L ::= · ID, {EQUAL, EOI}]
            [R ::= · L, {EQUAL, EOI}]
        Actions
            STAR : ShiftPrefix 1
            ID : ShiftPrefix 2
        Gotos
            L : 6
            R : 7
    State 2 [2.0]
        Kernel
            [L ::= ID ·, {EQUAL, EOI}]
        Actions
            EQUAL : Reduce L ::= ID
            EOI : Reduce L ::= ID
    State 3 [3.0]
        Kernel
            [S' ::= S · "⊥", {"ε"}]
        Actions
            "⊥" : ShiftPrefix 8
    State 4 [4.0]
        Kernel
            [S ::= L · EQUAL R EOI, {"⊥"}]
            [R ::= L ·, {EOI}]
        Actions
            EQUAL : ShiftPrefix 9
            EOI : Reduce R ::= L
    State 5 [5.0]
        Kernel
            [S ::= R · EOI, {"⊥"}]
        Actions
            EOI : ShiftAccept 10
    State 6 [6.0]
        Kernel
            [R ::= L ·, {EQUAL, EOI}]
        Actions
            EQUAL : Reduce R ::= L
            EOI : Reduce R ::= L
    State 7 [7.0]
        Kernel
            [L ::= STAR R ·, {EQUAL, EOI}]
        Actions
            EQUAL : Reduce L ::= STAR R
            EOI : Reduce L ::= STAR R
    State 8 [8.0]
        Kernel
            [S' ::= S "⊥" ·, {"ε"}]
        Actions
            "ε" : Reduce S' ::= S "⊥"
    State 9 [9.0]
        Kernel
            [S ::= L EQUAL · R EOI, {"⊥"}]
        Added
            [L ::= · STAR R, {EOI}]
            [L ::= · ID, {EOI}]
            [R ::= · L, {EOI}]
        Actions
            STAR : ShiftPrefix 1
            ID : ShiftPrefix 2
        Gotos
            L : 6
            R : 11
    State 10 [10.0]
        Kernel
            [S ::= R EOI ·, {"⊥"}]
        Actions
            "⊥" : Reduce S ::= R EOI
    State 11 [11.0]
        Kernel
            [S ::= L EQUAL R · EOI, {"⊥"}]
        Actions
            EOI : ShiftAccept 12
    State 12 [12.0]
        Kernel
            [S ::= L EQUAL R EOI ·, {"⊥"}]
        Actions
            "⊥" : Reduce S ::= L EQUAL R EOI
