F grammar

Tokens
    token EPSILON "ε"
        First: {"ε"}
        Follow: {}
    token PSEUDO_END "⊥"
        First: {"⊥"}
        Follow: {"ε"}
    token A
        First: {A}
        Follow: {C}
    token B
        First: {B}
        Follow: {C}
    token C
        First: {C}
        Follow: {D, E}
    token D
        First: {D}
        Follow: {"⊥"}
    token E
        First: {E}
        Follow: {"⊥"}
Non-terminals
    start S
        First: {A, B}
        Follow: {"⊥"}
        Productions
            S ::= A M D
            S ::= B N D
            S ::= A N E
            S ::= B M E
    start S'
        First: {A, B}
        Follow: {"ε"}
        Productions
            S' ::= S "⊥"
    nonterm M
        First: {C}
        Follow: {D, E}
        Productions
            M ::= C
    nonterm N
        First: {C}
        Follow: {D, E}
        Productions
            N ::= C
LR(1) States
    State 0 [0.0]
        Kernel
            [S' ::= · S "⊥", {"ε"}]
        Added
            [S ::= · A M D, {"⊥"}]
            [S ::= · B N D, {"⊥"}]
            [S ::= · A N E, {"⊥"}]
            [S ::= · B M E, {"⊥"}]
        Actions
            A : ShiftPrefix 1
            B : ShiftPrefix 2
        Gotos
            S : 3
    State 1 [1.0]
        Kernel
            [S ::= A · M D, {"⊥"}]
            [S ::= A · N E, {"⊥"}]
        Added
            [M ::= · C, {D}]
            [N ::= · C, {E}]
        Actions
            C : ShiftPrefix 4
        Gotos
            M : 5
            N : 6
    State 2 [2.0]
        Kernel
            [S ::= B · N D, {"⊥"}]
            [S ::= B · M E, {"⊥"}]
        Added
            [M ::= · C, {E}]
            [N ::= · C, {D}]
        Actions
            C : ShiftPrefix 7
        Gotos
            M : 8
            N : 9
    State 3 [3.0]
        Kernel
            [S' ::= S · "⊥", {"ε"}]
        Actions
            "⊥" : ShiftPrefix 10
    State 4 [4.0]
        Kernel
            [M ::= C ·, {D}]
            [N ::= C ·, {E}]
        Actions
            D : Reduce M ::= C
            E : Reduce N ::= C
    State 5 [5.0]
        Kernel
            [S ::= A M · D, {"⊥"}]
        Actions
            D : ShiftAccept 11
    State 6 [6.0]
        Kernel
            [S ::= A N · E, {"⊥"}]
        Actions
            E : ShiftAccept 12
    State 7 [4.1]
        Kernel
            [M ::= C ·, {E}]
            [N ::= C ·, {D}]
        Actions
            D : Reduce N ::= C
            E : Reduce M ::= C
    State 8 [7.0]
        Kernel
            [S ::= B M · E, {"⊥"}]
        Actions
            E : ShiftAccept 13
    State 9 [8.0]
        Kernel
            [S ::= B N · D, {"⊥"}]
        Actions
            D : ShiftAccept 14
    State 10 [9.0]
        Kernel
            [S' ::= S "⊥" ·, {"ε"}]
        Actions
            "ε" : Reduce S' ::= S "⊥"
    State 11 [10.0]
        Kernel
            [S ::= A M D ·, {"⊥"}]
        Actions
            "⊥" : Reduce S ::= A M D
    State 12 [11.0]
        Kernel
            [S ::= A N E ·, {"⊥"}]
        Actions
            "⊥" : Reduce S ::= A N E
    State 13 [12.0]
        Kernel
            [S ::= B M E ·, {"⊥"}]
        Actions
            "⊥" : Reduce S ::= B M E
    State 14 [13.0]
        Kernel
            [S ::= B N D ·, {"⊥"}]
        Actions
            "⊥" : Reduce S ::= B N D
