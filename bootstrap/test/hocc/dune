(rule
 (deps
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to help_a.out (run %{bin:hocc} -v -verbose -txt -text -html -hmh -hocc -c -canonical -hm -hemlock -ml -ocaml -s Foo -src Foo -d bar -dstdir bar -h)))))
(rule
 (alias runtest)
 (action (diff help_a.expected help_a.out)))

(rule
 (deps
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to help_b.out (run %{bin:hocc} -v -verbose -txt -text -html -hmh -hocc -c -canonical -hm -hemlock -ml -ocaml -s Foo -src Foo -d bar -dstdir bar -no-such-option)))))
(rule
 (alias runtest)
 (action (diff help_b.expected help_b.out)))

(rule
 (deps
  (glob_files Parse_a.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_a.out (run ./hocc_test %{bin:hocc} Parse_a -v)))))
(rule
 (alias runtest)
 (action (diff Parse_a.expected Parse_a.out)))

(rule
 (deps
  (glob_files Parse_b.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_b.out (run ./hocc_test %{bin:hocc} Parse_b -v)))))
(rule
 (alias runtest)
 (action (diff Parse_b.expected Parse_b.out)))

(rule
 (deps
  (glob_files Parse_error_malformed.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_malformed.out (run ./hocc_test %{bin:hocc} Parse_error_malformed -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_malformed.expected Parse_error_malformed.out)))

(rule
 (deps
  (glob_files Parse_error_uident.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_uident.out (run ./hocc_test %{bin:hocc} Parse_error_uident -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_uident.expected Parse_error_uident.out)))

(rule
 (deps
  (glob_files Parse_error_cident.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_cident.out (run ./hocc_test %{bin:hocc} Parse_error_cident -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_cident.expected Parse_error_cident.out)))

(rule
 (deps
  (glob_files Parse_error_precs_lt.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_precs_lt.out (run ./hocc_test %{bin:hocc} Parse_error_precs_lt -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_precs_lt.expected Parse_error_precs_lt.out)))

(rule
 (deps
  (glob_files Parse_error_precs.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_precs.out (run ./hocc_test %{bin:hocc} Parse_error_precs -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_precs.expected Parse_error_precs.out)))

(rule
 (deps
  (glob_files Parse_error_of_type_dot.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_of_type_dot.out (run ./hocc_test %{bin:hocc} Parse_error_of_type_dot -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_of_type_dot.expected Parse_error_of_type_dot.out)))

(rule
 (deps
  (glob_files Parse_error_delimited_rparen.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_delimited_rparen.out (run ./hocc_test %{bin:hocc} Parse_error_delimited_rparen -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_delimited_rparen.expected Parse_error_delimited_rparen.out)))

(rule
 (deps
  (glob_files Parse_error_delimited_rcapture.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_delimited_rcapture.out (run ./hocc_test %{bin:hocc} Parse_error_delimited_rcapture -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_delimited_rcapture.expected Parse_error_delimited_rcapture.out)))

(rule
 (deps
  (glob_files Parse_error_delimited_rbrack.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_delimited_rbrack.out (run ./hocc_test %{bin:hocc} Parse_error_delimited_rbrack -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_delimited_rbrack.expected Parse_error_delimited_rbrack.out)))

(rule
 (deps
  (glob_files Parse_error_delimited_rarray.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_delimited_rarray.out (run ./hocc_test %{bin:hocc} Parse_error_delimited_rarray -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_delimited_rarray.expected Parse_error_delimited_rarray.out)))

(rule
 (deps
  (glob_files Parse_error_delimited_rcurly.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_delimited_rcurly.out (run ./hocc_test %{bin:hocc} Parse_error_delimited_rcurly -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_delimited_rcurly.expected Parse_error_delimited_rcurly.out)))

(rule
 (deps
  (glob_files Parse_error_code.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_code.out (run ./hocc_test %{bin:hocc} Parse_error_code -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_code.expected Parse_error_code.out)))

(rule
 (deps
  (glob_files Parse_error_prod_param_type.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_prod_param_type.out (run ./hocc_test %{bin:hocc} Parse_error_prod_param_type -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_prod_param_type.expected Parse_error_prod_param_type.out)))

(rule
 (deps
  (glob_files Parse_error_reduction_arrow.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_reduction_arrow.out (run ./hocc_test %{bin:hocc} Parse_error_reduction_arrow -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_reduction_arrow.expected Parse_error_reduction_arrow.out)))

(rule
 (deps
  (glob_files Parse_error_nonterm_cce.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_nonterm_cce.out (run ./hocc_test %{bin:hocc} Parse_error_nonterm_cce -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_nonterm_cce.expected Parse_error_nonterm_cce.out)))

(rule
 (deps
  (glob_files Parse_error_hocc.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_hocc.out (run ./hocc_test %{bin:hocc} Parse_error_hocc -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_hocc.expected Parse_error_hocc.out)))

(rule
 (deps
  (glob_files Parse_error_hmhi.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Parse_error_hmhi.out (run ./hocc_test %{bin:hocc} Parse_error_hmhi -v)))))
(rule
 (alias runtest)
 (action (diff Parse_error_hmhi.expected Parse_error_hmhi.out)))

(rule
 (deps
  (glob_files Unused.hmh*)
  %{bin:hocc})
 (targets Unused.out.txt Unused.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Unused.out (run ./hocc_test %{bin:hocc} Unused -v -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff Unused.expected Unused.out)
   (diff Unused.expected.txt Unused.out.txt)
   (diff Unused.expected.hmh Unused.out.hmh))))

(rule
 (deps
  (glob_files PSEUDO_END_conflict.hmh*)
  %{bin:hocc})
 (targets PSEUDO_END_conflict.out.txt PSEUDO_END_conflict.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to PSEUDO_END_conflict.out (run ./hocc_test %{bin:hocc} PSEUDO_END_conflict -v -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff PSEUDO_END_conflict.expected PSEUDO_END_conflict.out)
   (diff PSEUDO_END_conflict.expected.txt PSEUDO_END_conflict.out.txt)
   (diff PSEUDO_END_conflict.expected.hmh PSEUDO_END_conflict.out.hmh))))

(rule
 (deps
  (glob_files Menhir21Longer.hmh*)
  %{bin:hocc})
 (targets Menhir21Longer.out.txt Menhir21Longer.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Menhir21Longer.out (run ./hocc_test %{bin:hocc} Menhir21Longer -v -a pgm1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff Menhir21Longer.expected Menhir21Longer.out)
   (diff Menhir21Longer.expected.txt Menhir21Longer.out.txt)
   (diff Menhir21Longer.expected.hmh Menhir21Longer.out.hmh))))

(rule
 (deps
  (glob_files Menhir21Shorter.hmh*)
  %{bin:hocc})
 (targets Menhir21Shorter.out.txt Menhir21Shorter.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Menhir21Shorter.out (run ./hocc_test %{bin:hocc} Menhir21Shorter -v -a pgm1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff Menhir21Shorter.expected Menhir21Shorter.out)
   (diff Menhir21Shorter.expected.txt Menhir21Shorter.out.txt)
   (diff Menhir21Shorter.expected.hmh Menhir21Shorter.out.hmh))))

(rule
 (deps
  (glob_files IelrFig1.hmh*)
  %{bin:hocc})
 (targets IelrFig1_rno.out.txt IelrFig1_rno.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig1_rno.out (run ./hocc_test %{bin:hocc} IelrFig1 -resolve no -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig1_rno.expected IelrFig1_rno.out)
   (diff IelrFig1_rno.expected.txt IelrFig1_rno.out.txt)
   (diff IelrFig1_rno.expected.hmh IelrFig1_rno.out.hmh))))

(rule
 (deps
  (glob_files IelrFig1.hmh*)
  %{bin:hocc})
 (targets IelrFig1.out.txt IelrFig1.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig1.out (run ./hocc_test %{bin:hocc} IelrFig1 -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig1.expected IelrFig1.out)
   (diff IelrFig1.expected.txt IelrFig1.out.txt)
   (diff IelrFig1.expected.hmh IelrFig1.out.hmh))))

(rule
 (deps
  (glob_files IelrFig2.hmh*)
  %{bin:hocc})
 (targets IelrFig2_rno.out.txt IelrFig2_rno.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig2_rno.out (run ./hocc_test %{bin:hocc} IelrFig2 -resolve no -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig2_rno.expected IelrFig2_rno.out)
   (diff IelrFig2_rno.expected.txt IelrFig2_rno.out.txt)
   (diff IelrFig2_rno.expected.hmh IelrFig2_rno.out.hmh))))

(rule
 (deps
  (glob_files IelrFig2.hmh*)
  %{bin:hocc})
 (targets IelrFig2.out.txt IelrFig2.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig2.out (run ./hocc_test %{bin:hocc} IelrFig2 -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig2.expected IelrFig2.out)
   (diff IelrFig2.expected.txt IelrFig2.out.txt)
   (diff IelrFig2.expected.hmh IelrFig2.out.hmh))))

(rule
 (deps
  (glob_files IelrFig3.hmh*)
  %{bin:hocc})
 (targets IelrFig3_apgm1.out.txt IelrFig3_apgm1.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig3_apgm1.out (run ./hocc_test %{bin:hocc} IelrFig3 -algorithm pgm1 -v -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig3_apgm1.expected IelrFig3_apgm1.out)
   (diff IelrFig3_apgm1.expected.txt IelrFig3_apgm1.out.txt)
   (diff IelrFig3_apgm1.expected.hmh IelrFig3_apgm1.out.hmh))))

(rule
 (deps
  (glob_files IelrFig3.hmh*)
  %{bin:hocc})
 (targets IelrFig3_rno.out.txt IelrFig3_rno.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig3_rno.out (run ./hocc_test %{bin:hocc} IelrFig3 -resolve no -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig3_rno.expected IelrFig3_rno.out)
   (diff IelrFig3_rno.expected.txt IelrFig3_rno.out.txt)
   (diff IelrFig3_rno.expected.hmh IelrFig3_rno.out.hmh))))

(rule
 (deps
  (glob_files IelrFig3.hmh*)
  %{bin:hocc})
 (targets IelrFig3.out.txt IelrFig3.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig3.out (run ./hocc_test %{bin:hocc} IelrFig3 -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig3.expected IelrFig3.out)
   (diff IelrFig3.expected.txt IelrFig3.out.txt)
   (diff IelrFig3.expected.hmh IelrFig3.out.hmh))))

(rule
 (deps
  (glob_files IelrFig4.hmh*)
  %{bin:hocc})
 (targets IelrFig4_rno.out.txt IelrFig4_rno.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig4_rno.out (run ./hocc_test %{bin:hocc} IelrFig4 -resolve no -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig4_rno.expected IelrFig4_rno.out)
   (diff IelrFig4_rno.expected.txt IelrFig4_rno.out.txt)
   (diff IelrFig4_rno.expected.hmh IelrFig4_rno.out.hmh))))

(rule
 (deps
  (glob_files IelrFig5.hmh*)
  %{bin:hocc})
 (targets IelrFig5_rno.out.txt IelrFig5_rno.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig5_rno.out (run ./hocc_test %{bin:hocc} IelrFig5 -resolve no -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig5_rno.expected IelrFig5_rno.out)
   (diff IelrFig5_rno.expected.txt IelrFig5_rno.out.txt)
   (diff IelrFig5_rno.expected.hmh IelrFig5_rno.out.hmh))))

(rule
 (deps
  (glob_files IelrFig5.hmh*)
  %{bin:hocc})
 (targets IelrFig5.out.txt IelrFig5.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig5.out (run ./hocc_test %{bin:hocc} IelrFig5 -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig5.expected IelrFig5.out)
   (diff IelrFig5.expected.txt IelrFig5.out.txt)
   (diff IelrFig5.expected.hmh IelrFig5.out.hmh))))

(rule
 (deps
  (glob_files IelrFig6.hmh*)
  %{bin:hocc})
 (targets IelrFig6.out.txt IelrFig6.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to IelrFig6.out (run ./hocc_test %{bin:hocc} IelrFig6 -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff IelrFig6.expected IelrFig6.out)
   (diff IelrFig6.expected.txt IelrFig6.out.txt)
   (diff IelrFig6.expected.hmh IelrFig6.out.hmh))))

(rule
 (deps
  (glob_files NestedEpsilon.hmh*)
  %{bin:hocc})
 (targets NestedEpsilon.out.txt)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to NestedEpsilon.out (run ./hocc_test %{bin:hocc} NestedEpsilon -v -txt)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff NestedEpsilon.expected NestedEpsilon.out)
   (diff NestedEpsilon.expected.txt NestedEpsilon.out.txt))))

(rule
 (deps
  (glob_files Example.hmh*)
  %{bin:hocc})
 (targets Example.out.txt)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Example.out (run ./hocc_test %{bin:hocc} Example -v -txt)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff Example.expected Example.out)
   (diff Example.expected.txt Example.out.txt))))

(rule
 (deps
  (glob_files Example.hmh*)
  %{bin:hocc})
 (targets Example_rno.out.txt)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Example_rno.out (run ./hocc_test %{bin:hocc} Example -resolve no -v -txt)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff Example_rno.expected Example_rno.out)
   (diff Example_rno.expected.txt Example_rno.out.txt))))

(rule
 (deps
  (glob_files Hocc.hmh*)
  %{bin:hocc})
 (targets Hocc.out.txt Hocc.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Hocc.out (run ./hocc_test %{bin:hocc} Hocc -v -a pgm1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff Hocc.expected Hocc.out)
   (diff Hocc.expected.txt Hocc.out.txt)
   (diff Hocc.expected.hmh Hocc.out.hmh))))

(rule
 (deps
  (glob_files A.hmh*)
  %{bin:hocc})
 (targets A.out.txt A.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to A.out (run ./hocc_test %{bin:hocc} A -v -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff A.expected A.out)
   (diff A.expected.txt A.out.txt)
   (diff A.expected.hmh A.out.hmh))))

(rule
 (deps
  (glob_files B.hmh*)
  %{bin:hocc})
 (targets B.out.txt B.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to B.out (run ./hocc_test %{bin:hocc} B -v -a pgm1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff B.expected B.out)
   (diff B.expected.txt B.out.txt)
   (diff B.expected.hmh B.out.hmh))))

(rule
 (deps
  (glob_files C.hmh*)
  %{bin:hocc})
 (targets C.out.txt C.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to C.out (run ./hocc_test %{bin:hocc} C -v -a pgm1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff C.expected C.out)
   (diff C.expected.txt C.out.txt)
   (diff C.expected.hmh C.out.hmh))))

(rule
 (deps
  (glob_files D.hmh*)
  %{bin:hocc})
 (targets D.out.txt D.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to D.out (run ./hocc_test %{bin:hocc} D -v -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff D.expected D.out)
   (diff D.expected.txt D.out.txt)
   (diff D.expected.hmh D.out.hmh))))

(rule
 (deps
  (glob_files E.hmh*)
  %{bin:hocc})
 (targets E.out.txt E.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to E.out (run ./hocc_test %{bin:hocc} E -v -a pgm1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff E.expected E.out)
   (diff E.expected.txt E.out.txt)
   (diff E.expected.hmh E.out.hmh))))

(rule
 (deps
  (glob_files F.hmh*)
  %{bin:hocc})
 (targets F.out.txt F.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to F.out (run ./hocc_test %{bin:hocc} F -v -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff F.expected F.out)
   (diff F.expected.txt F.out.txt)
   (diff F.expected.hmh F.out.hmh))))

(rule
 (deps
  (glob_files G.hmh*)
  %{bin:hocc})
 (targets G.out.txt G.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to G.out (run ./hocc_test %{bin:hocc} G -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff G.expected G.out)
   (diff G.expected.txt G.out.txt)
   (diff G.expected.hmh G.out.hmh))))

(rule
 (deps
  (glob_files H.hmh*)
  %{bin:hocc})
 (targets H.out.txt H.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to H.out (run ./hocc_test %{bin:hocc} H -v -a ielr1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff H.expected H.out)
   (diff H.expected.txt H.out.txt)
   (diff H.expected.hmh H.out.hmh))))

(rule
 (deps
  (glob_files G2.hmh*)
  %{bin:hocc})
 (targets G2.out.txt G2.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to G2.out (run ./hocc_test %{bin:hocc} G2 -v -a pgm1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff G2.expected G2.out)
   (diff G2.expected.txt G2.out.txt)
   (diff G2.expected.hmh G2.out.hmh))))

(rule
 (deps
  (glob_files G2.hmh*)
  %{bin:hocc})
 (targets G2_aielr1.out.txt G2_aielr1.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to G2_aielr1.out (run ./hocc_test %{bin:hocc} G2 -algorithm ielr1 -v -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff G2_aielr1.expected G2_aielr1.out)
   (diff G2_aielr1.expected.txt G2_aielr1.out.txt)
   (diff G2_aielr1.expected.hmh G2_aielr1.out.hmh))))

(rule
 (deps
  (glob_files N.hmh*)
  %{bin:hocc})
 (targets N.out.txt N.out.hmh)
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to N.out (run ./hocc_test %{bin:hocc} N -v -a pgm1 -txt -hmh)))))
(rule
 (alias runtest)
 (action
  (progn
   (diff N.expected N.out)
   (diff N.expected.txt N.out.txt)
   (diff N.expected.hmh N.out.hmh))))

(rule
 (deps
  (glob_files Lyken.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Lyken.out (run ./hocc_test %{bin:hocc} Lyken -v -a pgm1)))))
(rule
 (alias runtest)
 (action (diff Lyken.expected Lyken.out)))

(rule
 (deps
  (glob_files Gawk.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Gawk.out (run ./hocc_test %{bin:hocc} Gawk -v -a ielr1)))))
(rule
 (alias runtest)
 (action (diff Gawk.expected Gawk.out)))

(rule
 (deps
  (glob_files Gpic.hmh*)
  %{bin:hocc})
 (action
  (with-accepted-exit-codes
   (or 0 1)
   (with-outputs-to Gpic.out (run ./hocc_test %{bin:hocc} Gpic -v -a ielr1)))))
(rule
 (alias runtest)
 (action (diff Gpic.expected Gpic.out)))
