fold2 [] [] -> []
fold2 [] [0] -> [(None, Some (0, 0))]
fold2 [] [0; 1] -> [(None, Some (1, 100)); (None, Some (0, 0))]
fold2 [] [0; 1; 2] -> [(None, Some (2, 200)); (None, Some (1, 100)); (None, Some (0, 0))]
fold2 [] [0; 1; 66] -> [(None, Some (66, 6600)); (None, Some (1, 100)); (None, Some (0, 0))]
fold2 [] [0; 1; 66; 91] -> [(None, Some (91, 9100)); (None, Some (66, 6600)); (None, Some (1, 100)); (None, Some (0, 0))]
fold2 [0] [0] -> [(Some (0, 0), Some (0, 0))]
fold2 [0] [0; 1] -> [(None, Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0] [0; 1; 2] -> [(None, Some (2, 200)); (None, Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0] [0; 1; 66] -> [(None, Some (66, 6600)); (None, Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0] [0; 1; 66; 91] -> [(None, Some (91, 9100)); (None, Some (66, 6600)); (None, Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1] [0; 1] -> [(Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1] [0; 1; 2] -> [(None, Some (2, 200)); (Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1] [0; 1; 66] -> [(None, Some (66, 6600)); (Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1] [0; 1; 66; 91] -> [(None, Some (91, 9100)); (None, Some (66, 6600)); (Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1; 2] [0; 1; 2] -> [(Some (2, 200), Some (2, 200)); (Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1; 2] [0; 1; 66] -> [(None, Some (66, 6600)); (Some (2, 200), None); (Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1; 2] [0; 1; 66; 91] -> [(None, Some (91, 9100)); (None, Some (66, 6600)); (Some (2, 200), None); (Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1; 66] [0; 1; 66] -> [(Some (66, 6600), Some (66, 6600)); (Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1; 66] [0; 1; 66; 91] -> [(None, Some (91, 9100)); (Some (66, 6600), Some (66, 6600)); (Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
fold2 [0; 1; 66; 91] [0; 1; 66; 91] -> [(Some (91, 9100), Some (91, 9100)); (Some (66, 6600), Some (66, 6600)); (Some (1, 100), Some (1, 100)); (Some (0, 0), Some (0, 0))]
