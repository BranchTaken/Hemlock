fold2 [] [] -> []
fold2 [] [0] -> [(None, Some (0, 0))]
fold2 [] [0; 1] -> [(None, Some (0, 0)); (None, Some (1, 100))]
fold2 [] [0; 1; 2] -> [(None, Some (0, 0)); (None, Some (2, 200)); (None, Some (1, 100))]
fold2 [] [0; 1; 66] -> [(None, Some (0, 0)); (None, Some (66, 6600)); (None, Some (1, 100))]
fold2 [] [0; 1; 66; 91] -> [(None, Some (0, 0)); (None, Some (66, 6600)); (None, Some (91, 9100)); (None, Some (1, 100))]
fold2 [] [42; 420] -> [(None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [] [42; 420; 421] -> [(None, Some (421, 42100)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [] [42; 420; 4200] -> [(None, Some (4200, 420000)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0] [0] -> [(Some (0, 0), Some (0, 0))]
fold2 [0] [0; 1] -> [(Some (0, 0), Some (0, 0)); (None, Some (1, 100))]
fold2 [0] [0; 1; 2] -> [(Some (0, 0), Some (0, 0)); (None, Some (2, 200)); (None, Some (1, 100))]
fold2 [0] [0; 1; 66] -> [(Some (0, 0), Some (0, 0)); (None, Some (66, 6600)); (None, Some (1, 100))]
fold2 [0] [0; 1; 66; 91] -> [(Some (0, 0), Some (0, 0)); (None, Some (66, 6600)); (None, Some (91, 9100)); (None, Some (1, 100))]
fold2 [0] [42; 420] -> [(Some (0, 0), None); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0] [42; 420; 421] -> [(Some (0, 0), None); (None, Some (421, 42100)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0] [42; 420; 4200] -> [(Some (0, 0), None); (None, Some (4200, 420000)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1] [0; 1] -> [(Some (0, 0), Some (0, 0)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1] [0; 1; 2] -> [(Some (0, 0), Some (0, 0)); (None, Some (2, 200)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1] [0; 1; 66] -> [(Some (0, 0), Some (0, 0)); (None, Some (66, 6600)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1] [0; 1; 66; 91] -> [(Some (0, 0), Some (0, 0)); (None, Some (66, 6600)); (None, Some (91, 9100)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1] [42; 420] -> [(Some (0, 0), None); (Some (1, 100), None); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1] [42; 420; 421] -> [(Some (0, 0), None); (Some (1, 100), None); (None, Some (421, 42100)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1] [42; 420; 4200] -> [(Some (0, 0), None); (Some (1, 100), None); (None, Some (4200, 420000)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1; 2] [0; 1; 2] -> [(Some (0, 0), Some (0, 0)); (Some (2, 200), Some (2, 200)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1; 2] [0; 1; 66] -> [(Some (0, 0), Some (0, 0)); (Some (2, 200), None); (None, Some (66, 6600)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1; 2] [0; 1; 66; 91] -> [(Some (0, 0), Some (0, 0)); (Some (2, 200), None); (None, Some (66, 6600)); (None, Some (91, 9100)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1; 2] [42; 420] -> [(Some (0, 0), None); (Some (2, 200), None); (Some (1, 100), None); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1; 2] [42; 420; 421] -> [(Some (0, 0), None); (Some (2, 200), None); (Some (1, 100), None); (None, Some (421, 42100)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1; 2] [42; 420; 4200] -> [(Some (0, 0), None); (Some (2, 200), None); (Some (1, 100), None); (None, Some (4200, 420000)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1; 66] [0; 1; 66] -> [(Some (0, 0), Some (0, 0)); (Some (66, 6600), Some (66, 6600)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1; 66] [0; 1; 66; 91] -> [(Some (0, 0), Some (0, 0)); (Some (66, 6600), Some (66, 6600)); (None, Some (91, 9100)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1; 66] [42; 420] -> [(Some (0, 0), None); (Some (66, 6600), None); (Some (1, 100), None); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1; 66] [42; 420; 421] -> [(Some (0, 0), None); (Some (66, 6600), None); (Some (1, 100), None); (None, Some (421, 42100)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1; 66] [42; 420; 4200] -> [(Some (0, 0), None); (Some (66, 6600), None); (Some (1, 100), None); (None, Some (4200, 420000)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1; 66; 91] [0; 1; 66; 91] -> [(Some (0, 0), Some (0, 0)); (Some (66, 6600), Some (66, 6600)); (Some (91, 9100), Some (91, 9100)); (Some (1, 100), Some (1, 100))]
fold2 [0; 1; 66; 91] [42; 420] -> [(Some (0, 0), None); (Some (66, 6600), None); (Some (91, 9100), None); (Some (1, 100), None); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1; 66; 91] [42; 420; 421] -> [(Some (0, 0), None); (Some (66, 6600), None); (Some (91, 9100), None); (Some (1, 100), None); (None, Some (421, 42100)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [0; 1; 66; 91] [42; 420; 4200] -> [(Some (0, 0), None); (Some (66, 6600), None); (Some (91, 9100), None); (Some (1, 100), None); (None, Some (4200, 420000)); (None, Some (420, 42000)); (None, Some (42, 4200))]
fold2 [42; 420] [42; 420] -> [(Some (420, 42000), Some (420, 42000)); (Some (42, 4200), Some (42, 4200))]
fold2 [42; 420] [42; 420; 421] -> [(None, Some (421, 42100)); (Some (420, 42000), Some (420, 42000)); (Some (42, 4200), Some (42, 4200))]
fold2 [42; 420] [42; 420; 4200] -> [(None, Some (4200, 420000)); (Some (420, 42000), Some (420, 42000)); (Some (42, 4200), Some (42, 4200))]
fold2 [42; 420; 421] [42; 420; 421] -> [(Some (421, 42100), Some (421, 42100)); (Some (420, 42000), Some (420, 42000)); (Some (42, 4200), Some (42, 4200))]
fold2 [42; 420; 421] [42; 420; 4200] -> [(Some (421, 42100), None); (None, Some (4200, 420000)); (Some (420, 42000), Some (420, 42000)); (Some (42, 4200), Some (42, 4200))]
fold2 [42; 420; 4200] [42; 420; 4200] -> [(Some (4200, 420000), Some (4200, 420000)); (Some (420, 42000), Some (420, 42000)); (Some (42, 4200), Some (42, 4200))]
