split_until/take_until,drop_until [] ~f:(fun elm -> elm >= 0) -> [] [] / [] []
rev_split_until/rev_take_until,drop_until [] ~f:(fun elm -> elm >= 0) -> [] [] / [] []
split_until/take_until,drop_until [0] ~f:(fun elm -> elm >= 0) -> [] [0] / [] [0]
rev_split_until/rev_take_until,drop_until [0] ~f:(fun elm -> elm >= 0) -> [] [0] / [] [0]
split_until/take_until,drop_until [0] ~f:(fun elm -> elm >= 1) -> [0] [] / [0] []
rev_split_until/rev_take_until,drop_until [0] ~f:(fun elm -> elm >= 1) -> [0] [] / [0] []
split_until/take_until,drop_until [0; 1] ~f:(fun elm -> elm >= 0) -> [] [0; 1] / [] [0; 1]
rev_split_until/rev_take_until,drop_until [0; 1] ~f:(fun elm -> elm >= 0) -> [] [0; 1] / [] [0; 1]
split_until/take_until,drop_until [0; 1] ~f:(fun elm -> elm >= 1) -> [0] [1] / [0] [1]
rev_split_until/rev_take_until,drop_until [0; 1] ~f:(fun elm -> elm >= 1) -> [0] [1] / [0] [1]
split_until/take_until,drop_until [0; 1] ~f:(fun elm -> elm >= 2) -> [0; 1] [] / [0; 1] []
rev_split_until/rev_take_until,drop_until [0; 1] ~f:(fun elm -> elm >= 2) -> [1; 0] [] / [1; 0] []
