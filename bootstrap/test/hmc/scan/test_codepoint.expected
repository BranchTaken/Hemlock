``'a'``
  (Tok_codepoint {source=[1:0..1:3); codepoint=(Constant 'a')})
  (Tok_end_of_input {source=[1:3..1:3)})
``'\t' '\n' '\r' '\'' '\\'``
  (Tok_codepoint {source=[1:0..1:4); codepoint=(Constant '\t')})
  (Tok_whitespace {source=[1:4..1:5)})
  (Tok_codepoint {source=[1:5..1:9); codepoint=(Constant '\n')})
  (Tok_whitespace {source=[1:9..1:10)})
  (Tok_codepoint {source=[1:10..1:14); codepoint=(Constant '\r')})
  (Tok_whitespace {source=[1:14..1:15)})
  (Tok_codepoint {source=[1:15..1:19); codepoint=(Constant '\'')})
  (Tok_whitespace {source=[1:19..1:20)})
  (Tok_codepoint {source=[1:20..1:24); codepoint=(Constant '\\')})
  (Tok_end_of_input {source=[1:24..1:24)})
``'\u{41}'``
  (Tok_codepoint {source=[1:0..1:8); codepoint=(Constant 'A')})
  (Tok_end_of_input {source=[1:8..1:8)})
``'\u{000_ff_fd}'``
  (Tok_codepoint {source=[1:0..1:15); codepoint=(Constant '�')})
  (Tok_end_of_input {source=[1:15..1:15)})
``'�'``
  (Tok_codepoint {source=[1:0..1:3); codepoint=(Constant '�')})
  (Tok_end_of_input {source=[1:3..1:3)})
``'``
  (Tok_tick {source=[1:0..1:1)})
  (Tok_end_of_input {source=[1:1..1:1)})
``' ``
  (Tok_tick {source=[1:0..1:2)})
  (Tok_end_of_input {source=[1:2..1:2)})
``'

``
  (Tok_tick {source=[1:0..1:1)})
  (Tok_whitespace {source=[1:1..2:0)})
  (Tok_end_of_input {source=[2:0..2:0)})
``'
'``
  (Tok_tick {source=[1:0..1:1)})
  (Tok_whitespace {source=[1:1..2:0)})
  (Tok_line_delim {source=[2:0..2:0)})
  (Tok_tick {source=[2:0..2:1)})
  (Tok_end_of_input {source=[2:1..2:1)})
``' a``
  (Tok_tick {source=[1:0..1:1)})
  (Tok_whitespace {source=[1:1..1:2)})
  (Tok_uident {source=[1:2..1:3); uident=(Constant "a")})
  (Tok_end_of_input {source=[1:3..1:3)})
``'a``
  (Tok_tick {source=[1:0..1:2)})
  (Tok_end_of_input {source=[1:2..1:2)})
``'abcdefghijklmnopqrstuvwxyz_``
  (Tok_tick {source=[1:0..1:1)})
  (Tok_uident {source=[1:1..1:28); uident=(Constant "abcdefghijklmnopqrstuvwxyz_")})
  (Tok_end_of_input {source=[1:28..1:28)})
``'aa'``
  (Tok_tick {source=[1:0..1:1)})
  (Tok_uident {source=[1:1..1:4); uident=(Constant "aa'")})
  (Tok_end_of_input {source=[1:4..1:4)})
``'(a: type)``
  (Tok_tick {source=[1:0..1:1)})
  (Tok_lparen {source=[1:1..1:2)})
  (Tok_uident {source=[1:2..1:3); uident=(Constant "a")})
  (Tok_colon {source=[1:3..1:4)})
  (Tok_whitespace {source=[1:4..1:5)})
  (Tok_type {source=[1:5..1:9)})
  (Tok_rparen {source=[1:9..1:10)})
  (Tok_end_of_input {source=[1:10..1:10)})
``'
  (a: type)``
  (Tok_tick {source=[1:0..1:1)})
  (Tok_whitespace {source=[1:1..2:0)})
  (Tok_whitespace {source=[2:0..2:2)})
  (Tok_lparen {source=[2:2..2:3)})
  (Tok_uident {source=[2:3..2:4); uident=(Constant "a")})
  (Tok_colon {source=[2:4..2:5)})
  (Tok_whitespace {source=[2:5..2:6)})
  (Tok_type {source=[2:6..2:10)})
  (Tok_rparen {source=[2:10..2:11)})
  (Tok_end_of_input {source=[2:11..2:11)})
``x 'a: '(b: type) -> a -> b``
  (Tok_uident {source=[1:0..1:1); uident=(Constant "x")})
  (Tok_whitespace {source=[1:1..1:2)})
  (Tok_tick {source=[1:2..1:3)})
  (Tok_uident {source=[1:3..1:4); uident=(Constant "a")})
  (Tok_colon {source=[1:4..1:5)})
  (Tok_whitespace {source=[1:5..1:6)})
  (Tok_tick {source=[1:6..1:7)})
  (Tok_lparen {source=[1:7..1:8)})
  (Tok_uident {source=[1:8..1:9); uident=(Constant "b")})
  (Tok_colon {source=[1:9..1:10)})
  (Tok_whitespace {source=[1:10..1:11)})
  (Tok_type {source=[1:11..1:15)})
  (Tok_rparen {source=[1:15..1:16)})
  (Tok_whitespace {source=[1:16..1:17)})
  (Tok_arrow {source=[1:17..1:19)})
  (Tok_whitespace {source=[1:19..1:20)})
  (Tok_uident {source=[1:20..1:21); uident=(Constant "a")})
  (Tok_whitespace {source=[1:21..1:22)})
  (Tok_arrow {source=[1:22..1:24)})
  (Tok_whitespace {source=[1:24..1:25)})
  (Tok_uident {source=[1:25..1:26); uident=(Constant "b")})
  (Tok_end_of_input {source=[1:26..1:26)})
``'	' ''``
  (Tok_codepoint {source=[1:0..1:9); codepoint=(Malformed ["[1:1..1:8): Invalid codepoint"])})
  (Tok_whitespace {source=[1:9..1:10)})
  (Tok_codepoint {source=[1:10..1:13); codepoint=(Malformed ["[1:11..1:12): Invalid codepoint"])})
  (Tok_end_of_input {source=[1:13..1:13)})
``'\

``
  (Tok_codepoint {source=[1:0..2:0); codepoint=(Malformed ["[1:0..2:0): Unterminated codepoint literal"; "[1:1..2:0): Illegal backslash escape"])})
  (Tok_end_of_input {source=[2:0..2:0)})
``'\u{0}x'``
  (Tok_codepoint {source=[1:0..1:8); codepoint=(Malformed ["[1:6..1:7): Excess codepoint before terminator"])})
  (Tok_end_of_input {source=[1:8..1:8)})
``'\u{110ffff}'``
  (Tok_codepoint {source=[1:0..1:13); codepoint=(Malformed ["[1:1..1:12): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:13..1:13)})
``'\u{110000}'``
  (Tok_codepoint {source=[1:0..1:12); codepoint=(Malformed ["[1:1..1:11): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:12..1:12)})
``'\u{110000}'``
  (Tok_codepoint {source=[1:0..1:12); codepoint=(Malformed ["[1:1..1:11): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:12..1:12)})
``'\u{d800}'``
  (Tok_codepoint {source=[1:0..1:10); codepoint=(Malformed ["[1:1..1:9): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:10..1:10)})
``'\u{0z1}'``
  (Tok_codepoint {source=[1:0..1:9); codepoint=(Malformed ["[1:1..1:6): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:9..1:9)})
``'\u{x'``
  (Tok_codepoint {source=[1:0..1:6); codepoint=(Malformed ["[1:1..1:5): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:6..1:6)})
``'\u{0}a'``
  (Tok_codepoint {source=[1:0..1:8); codepoint=(Malformed ["[1:6..1:7): Excess codepoint before terminator"])})
  (Tok_end_of_input {source=[1:8..1:8)})
``'\u{0}``
  (Tok_codepoint {source=[1:0..1:6); codepoint=(Malformed ["[1:0..1:6): Unterminated codepoint literal"])})
  (Tok_end_of_input {source=[1:6..1:6)})
``'\u{0'``
  (Tok_codepoint {source=[1:0..1:6); codepoint=(Malformed ["[1:0..1:6): Unterminated codepoint literal"; "[1:1..1:6): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:6..1:6)})
``'\u{'``
  (Tok_codepoint {source=[1:0..1:5); codepoint=(Malformed ["[1:0..1:5): Unterminated codepoint literal"; "[1:1..1:5): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:5..1:5)})
``'\u00'``
  (Tok_codepoint {source=[1:0..1:6); codepoint=(Malformed ["[1:1..1:4): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:6..1:6)})
``'\u0'``
  (Tok_codepoint {source=[1:0..1:5); codepoint=(Malformed ["[1:1..1:4): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:5..1:5)})
``'\u'``
  (Tok_codepoint {source=[1:0..1:4); codepoint=(Malformed ["[1:0..1:4): Unterminated codepoint literal"; "[1:1..1:4): Invalid \u{...}"])})
  (Tok_end_of_input {source=[1:4..1:4)})
``'\u``
  (Tok_codepoint {source=[1:0..1:3); codepoint=(Malformed ["[1:0..1:3): Unterminated codepoint literal"])})
  (Tok_end_of_input {source=[1:3..1:3)})
``'\x'``
  (Tok_codepoint {source=[1:0..1:4); codepoint=(Malformed ["[1:1..1:3): Illegal backslash escape"])})
  (Tok_end_of_input {source=[1:4..1:4)})
``'\``
  (Tok_codepoint {source=[1:0..1:2); codepoint=(Malformed ["[1:0..1:2): Unterminated codepoint literal"])})
  (Tok_end_of_input {source=[1:2..1:2)})
``'''``
  (Tok_codepoint {source=[1:0..1:2); codepoint=(Malformed ["[1:0..1:2): Empty codepoint literal"])})
  (Tok_tick {source=[1:2..1:3)})
  (Tok_end_of_input {source=[1:3..1:3)})
``''``
  (Tok_codepoint {source=[1:0..1:2); codepoint=(Malformed ["[1:0..1:2): Empty codepoint literal"])})
  (Tok_end_of_input {source=[1:2..1:2)})
